class API_DistanceMatrix:
    function calcularDistanciasYTiempo(listaDirecciones):
        resultado = []
        for i from 0 to listaDirecciones.length - 2:
            origen = listaDirecciones[i]
            destino = listaDirecciones[i + 1]
            tiempo = consultarAPI(origen, destino)  // Simulamos una consulta a la API de Google
            resultado.append(tiempo)
        return resultado

class Ruta:
    list paradas
    list tiemposDeParada
    bool estadoSaludEnParadas

    function calcularDemoras():
        tiempos = API_DistanceMatrix.calcularDistanciasYTiempo(paradas)
        demorasTotales = []
        for i from 0 to tiempos.length - 1:
            demoraSeccion = tiempos[i]
            if tiemposDeParada[i] is not None:
                demoraSeccion += tiemposDeParada[i]
            demorasTotales.append(demoraSeccion)
        return demorasTotales

class Transeunte(Usuario):
    Ruta ruta

    function establecerRuta(ruta):
        this.ruta = ruta

    function comenzarTrayecto():
        demoras = ruta.calcularDemoras()
        // LÃ³gica adicional para manejar el inicio del trayecto y notificaciones